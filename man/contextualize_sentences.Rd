% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/01_pre_post_processing.R
\name{contextualize_sentences}
\alias{contextualize_sentences}
\title{Add Sentence Context to an Entity-Level Data Table}
\usage{
contextualize_sentences(dt, text_col = "text")
}
\arguments{
\item{dt}{A \code{\link[data.table:data.table]{data.table::data.table()}} with at least the columns
\code{"doc_idx"}, \code{"sen_idx"}, and the column specified in \code{text_col}.
Each row should represent one entity.}

\item{text_col}{Character scalar. The name of the column containing
the sentence text. Defaults to \code{"text"}.}
}
\value{
A \code{\link[data.table:data.table]{data.table::data.table()}} with the same number of rows
as the input, enriched by a new column named
\code{paste0(text_col, "_context")}, which contains the surrounding
sentence context for each row.
}
\description{
Reduces an entity-level data table to sentence-level observations and
reconstructs the surrounding context of each sentence. For every
\verb{(doc_idx, sen_idx)} pair, the function identifies the sentence text,
extracts the preceding and succeeding sentence text (if available),
and constructs a new context column consisting of
\code{previous + current + next}. The enriched context is then merged back
to the original data table.
}
\details{
\itemize{
\item Context columns \verb{<text_col>_prev} and \verb{<text_col>_next} are created
internally to build the context but are removed before returning.
\item The context column concatenates the previous sentence (if present),
the current sentence, and the next sentence (if present), with
extra whitespace removed.
\item If multiple rows exist per \verb{(doc_idx, sen_idx)} pair, only the first
sentence text is used.
}
}
\examples{
\dontrun{
library(data.table)
dt <- data.table(
  id = 1:4,
  doc_idx = c(1, 1, 1, 2),
  sen_idx = c(1, 1, 2, 1),
  ent_idx = 1:4,
  text = c("Hello world.", "Hello world.", "Next sentence.", "Another doc.")
)
contextualize_sentences(dt, text_col = "text")
}
}
